/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.Timer;
import org.json.JSONException;

/**
 *
 * @author Andrey
 */
public class MapGUI extends javax.swing.JFrame {        
    public static int width;
    public static int height;
    public static String[][] codes;
    private static String mapName = "";
    private static boolean visible = false;
    private int xpos;
    private int ypos;
    
    public MapGUI() {
        super("Map GUI");
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        Squares squares = new Squares();
        squares.squareheight = MainMenuGUI.C.getMapH();
        squares.squarewidth = MainMenuGUI.C.getMapW();
        getContentPane().add(squares);
        initInput();
        pack();
        setLocationRelativeTo(null);
        setVisible(true);
        initComponents();
        add(playerLabel,0);
        playerLabel.setVisible(false);
        for(int i = 0; i < width; i++){
            for (int j = 0; j < height; j++) {
                squares.addSquare(i * 100 + 50, j * 100 + 50, 100, 100);
                squares.addCodes(codes[i][j]);
            }
        }
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
        xpos = MainMenuGUI.C.getX();
        ypos = MainMenuGUI.C.getY();
        playerLabel.setBounds(getContentPane().getSize().width, ypos*100+50, 50, 50);
        playerLabel.setVisible(true);
        mapJLabel.setText(MainMenuGUI.C.getMapName());
        positionJLabel.setText("("+String.valueOf(xpos)+","+String.valueOf(ypos)+")");
        System.out.println(getContentPane().getSize().height);
        System.out.println(getContentPane().getSize().width);
//      playerLabel.setComponentZOrder(squares, 0);
    }
    
    public static void sVisible(){
        visible = !visible;
    }
    public static void initInput(){        
        width = 4;
        height = 4;
        codes = new String[width][height];
        for(int i = 0; i<width; i++){
            for(int j = 0; j<height; j++){
                codes[i][j] = "R11";
            }
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        playerLabel = new javax.swing.JLabel();
        mapLabel = new javax.swing.JLabel();
        positionLabel = new javax.swing.JLabel();
        timeLabel = new javax.swing.JLabel();
        currenttimeLabel = new javax.swing.JLabel();
        mapJLabel = new javax.swing.JLabel();
        positionJLabel = new javax.swing.JLabel();
        timeJLabel = new javax.swing.JLabel();
        currenttimeJLabel = new javax.swing.JLabel();
        moveButton = new javax.swing.JButton();
        xTextField = new javax.swing.JTextField();
        yTextField = new javax.swing.JTextField();
        fieldButton = new javax.swing.JButton();
        inventoryButton = new javax.swing.JButton();
        mixitemButton = new javax.swing.JButton();
        tradeboxButton = new javax.swing.JButton();
        offerButton = new javax.swing.JButton();
        finditemButton = new javax.swing.JButton();
        logoutButton = new javax.swing.JButton();

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Map");
        setPreferredSize(new java.awt.Dimension(1200, 600));
        setResizable(false);

        playerLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/choc.png"))); // NOI18N

        mapLabel.setText("Map: ");

        positionLabel.setText("Position:");

        timeLabel.setText("Time:");

        currenttimeLabel.setText("Current Time:");

        moveButton.setText("Move");
        moveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moveButtonActionPerformed(evt);
            }
        });

        xTextField.setPreferredSize(new java.awt.Dimension(7, 20));

        yTextField.setPreferredSize(new java.awt.Dimension(7, 20));

        fieldButton.setText("Field");
        fieldButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldButtonActionPerformed(evt);
            }
        });

        inventoryButton.setText("Inventory");
        inventoryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inventoryButtonActionPerformed(evt);
            }
        });

        mixitemButton.setText("Mix Item");
        mixitemButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mixitemButtonActionPerformed(evt);
            }
        });

        tradeboxButton.setText("Trade Box");
        tradeboxButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tradeboxButtonActionPerformed(evt);
            }
        });

        offerButton.setText("Offer");
        offerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                offerButtonActionPerformed(evt);
            }
        });

        finditemButton.setText("Find Item");
        finditemButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finditemButtonActionPerformed(evt);
            }
        });

        logoutButton.setText("Logout");
        logoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(222, 222, 222)
                .addComponent(playerLabel)
                .addGap(369, 369, 369)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(fieldButton, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(xTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(yTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(moveButton, javax.swing.GroupLayout.DEFAULT_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(inventoryButton, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mixitemButton, javax.swing.GroupLayout.DEFAULT_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tradeboxButton, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(offerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(finditemButton, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(logoutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(mapLabel)
                        .addGap(95, 95, 95)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(currenttimeJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)
                            .addComponent(mapJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(currenttimeLabel)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(positionLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(timeLabel))
                        .addGap(81, 81, 81)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(positionJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(timeJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(playerLabel)
                .addGap(279, 279, 279))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(mapJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(mapLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(positionLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(positionJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(timeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(timeJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(currenttimeLabel))
                    .addComponent(currenttimeJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(31, 31, 31)
                .addComponent(moveButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(xTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(yTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fieldButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(inventoryButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mixitemButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tradeboxButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(offerButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(finditemButton)
                .addGap(40, 40, 40)
                .addComponent(logoutButton)
                .addGap(114, 114, 114))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fieldButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldButtonActionPerformed
        jDialog1.setVisible(true);
        MainMenuGUI.C.field();
        jDialog1.setVisible(false);
    }//GEN-LAST:event_fieldButtonActionPerformed

    private void inventoryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inventoryButtonActionPerformed
        InventoryGUI inventory = null;
        try {
            MainMenuGUI.C.inventory();
            inventory = new InventoryGUI();
        } catch (IOException ex) {
            Logger.getLogger(MapGUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (JSONException ex) {
            Logger.getLogger(MapGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_inventoryButtonActionPerformed

    private void mixitemButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mixitemButtonActionPerformed
        MixGUI mix = new MixGUI();
        setVisible(false);
        mix.setVisible(true);
    }//GEN-LAST:event_mixitemButtonActionPerformed

    private void tradeboxButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tradeboxButtonActionPerformed

    }//GEN-LAST:event_tradeboxButtonActionPerformed

    private void offerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_offerButtonActionPerformed
        OfferGUI offer = new OfferGUI();
        setVisible(false);
        offer.setVisible(true);
    }//GEN-LAST:event_offerButtonActionPerformed

    private void finditemButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finditemButtonActionPerformed
        
    }//GEN-LAST:event_finditemButtonActionPerformed

    private void logoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutButtonActionPerformed
        MainMenuGUI mainmenu = new MainMenuGUI();
        setVisible(false);
        mainmenu.setVisible(true);
    }//GEN-LAST:event_logoutButtonActionPerformed

    private void moveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moveButtonActionPerformed
        if(xTextField.getText().isEmpty() || yTextField.getText().isEmpty()){
            //do nothing
        }
        else{
            xpos = Integer.valueOf(xTextField.getText());
            ypos = Integer.valueOf(yTextField.getText());
            MainMenuGUI.C.move(xpos,ypos);
            long temp = MainMenuGUI.C.getServerTime() - System.currentTimeMillis()/1000;
            if(MainMenuGUI.C.getStatus().equals("ok")){
                if(temp > MainMenuGUI.C.getDeltaTime()){
                    System.out.println("Masuk");
                    ActionListener listener = new ActionListener(){
                        public void actionPerformed(ActionEvent event){
                             positionJLabel.setText("("+String.valueOf(xpos)+","+String.valueOf(ypos)+")");
                             playerLabel.setBounds(xpos*100+50, ypos*100+50, 50, 50);
                        }
                    };
                    Timer timer = new Timer((int) (temp-MainMenuGUI.C.getDeltaTime()) * 1000, listener);
                    timer.setRepeats(false);
                    timer.start();
                } else {
                    positionJLabel.setText("("+String.valueOf(xpos)+","+String.valueOf(ypos)+")");
                }
            }
            else{
                
            }
        }
    }//GEN-LAST:event_moveButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MapGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MapGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MapGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MapGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                new MapGUI();
            }
        });
        
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel currenttimeJLabel;
    private javax.swing.JLabel currenttimeLabel;
    private javax.swing.JButton fieldButton;
    private javax.swing.JButton finditemButton;
    private javax.swing.JButton inventoryButton;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JButton logoutButton;
    private javax.swing.JLabel mapJLabel;
    private javax.swing.JLabel mapLabel;
    private javax.swing.JButton mixitemButton;
    private javax.swing.JButton moveButton;
    private javax.swing.JButton offerButton;
    private javax.swing.JLabel playerLabel;
    private javax.swing.JLabel positionJLabel;
    private javax.swing.JLabel positionLabel;
    private javax.swing.JLabel timeJLabel;
    private javax.swing.JLabel timeLabel;
    private javax.swing.JButton tradeboxButton;
    private javax.swing.JTextField xTextField;
    private javax.swing.JTextField yTextField;
    // End of variables declaration//GEN-END:variables
}

class Squares extends JPanel {
   private static final int PREF_W = 500;
   private static final int PREF_H = PREF_W;
   private List<Rectangle> squares = new ArrayList<>();
   private List<String> itemCodes = new ArrayList<>();
   public int squarewidth;
   public int squareheight;
   
   public void addSquare(int x, int y, int width, int height) {
      Rectangle rect = new Rectangle(x, y, width, height);
      squares.add(rect);
   }
   
   public void addCodes(String code){
      itemCodes.add(code);
   }
   
   @Override
   public Dimension getPreferredSize() {
      return new Dimension(PREF_W, PREF_H);
   }

   @Override
   protected void paintComponent(Graphics g) {
      super.paintComponent(g);
      Graphics2D g2 = (Graphics2D) g;
      g2.setColor(Color.GREEN);
      int i = 0 , j = 0;
      for (Rectangle rect : squares) {
        g2.draw(rect);
        g2.fillRect(i*100+52, j*100+52,(int)rect.getWidth()-2,(int)rect.getHeight()-2);   
        i++;
        if(i>=squarewidth-1){ 
            i=0;
            j++;
            if(j>=squareheight-1) j=0;
        }
      }
   }
}